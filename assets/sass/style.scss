/* variable */
$primary-color: #1dcad3;

$lowercase: lowercase;
$uppercase: uppercase;
$capitalize: capitalize;

/* keyframe */
@keyframes scrollAnimation {
    to {
        transform: translate(0px, -60%);
    }
    from {
        transform: translate(0px, -50%);
    }
}


/* mixin */
@mixin banaple-title {
    line-height: normal; font-size: 40px; font-weight: bold; color: #000;
}  
@mixin banaple-section {
    width: 1136px; margin: 110px auto 0px; // 2022-12-20 
}
@mixin banaple-description {
    line-height: 32px; padding-top: 10px; font-size: 18px; color: #999;
}
/* root */ 
body { position: relative; }
/* section */
.fp-viewing-0,
.fp-viewing-3 { 
    header { background: rgba(0,0,0,0.08);
        .category {
            &:after { border-bottom: 1px solid #fff; opacity: 0.3; }
            .list-item {
                > a { color: #fff; }
            }
        }
    }
}

@media (max-width: 1240px) {
    .fp-viewing-0,
    .fp-viewing-3 {
        header { background: rgba(0,0,0,0.08); border-bottom: 1px solid rgba(255,255,255, .3);
            .category {
                .menu-btn {
                    &:before, &:after, span { background: #fff; } 
                }
            }
        }
    }
}

/* title widget */
.main-title { font-size: 26px; color: $primary-color; text-align: center; text-transform: $capitalize; }
.main-description { padding-top: 30px; font-size: 36px; font-weight: bold; color: #000; text-align: center; }

@media (max-width: 1240px) { 
    .main-title { padding-top: 8.3333vw; font-size: 4.1667vw; }
    .main-description { padding: 5.5556vw 0px 0px; font-size: 6.1111vw; }
}

.controls { 
    display: flex;
    position: absolute;
    bottom: 0px;
    left: 0px;
    z-index: 20;
    width: 100%;
    flex: 1;
    .progress {
        display: flex;
        position: relative;
        width: 100%;
        height: 8px;
        background: rgba(0,0,0,0.5);
        flex-basis: 100%;
        .progress-bar { background: $primary-color; }
    }
}

@mixin beforeFadein ($leftRight, $topBottom) { 
    transform: translate($leftRight,  $topBottom); 
    transition: 1s ease-in-out; 
    opacity: 0;
    will-change: transform, opacity; 
}

@mixin activeFadein {
    &.active {
        .list-item { transform: translate(0, 0); opacity: 1; will-change: auto;
            @for $i from 1 through 9 {
                &:nth-child(#{$i}) {
                    transition-delay: calc((0 + $i) /8)+s;
                }
            }
        }
    }    
}
